<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="error-handling-unit-test.xml" />
	<munit:before-test name="error-handling-unit-testBefore_Test" doc:id="25065ab3-b3f2-451f-a322-49a8f6355779" >
		<munit-tools:mock-when doc:name="Mock Async" doc:id="7d8a8e51-9889-4457-9730-4368f6eb631c" processor="async">
			<munit-tools:with-attributes>
				<munit-tools:with-attribute whereValue="Async" attributeName="doc:name" />
			</munit-tools:with-attributes>

			</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock Basic Security Filter" doc:id="fc40cb86-98cd-4f07-865b-505c8376976a" processor="http:basic-security-filter">
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="Security Filter Realm: mule" attributeName="doc:name" />
			</munit-tools:with-attributes>
			</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock Authorisation Filter" doc:id="44c369fb-2684-424b-953f-dca711297c57" processor="spring:authorization-filter">
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="Authorization filter: ROLE_CLIENT" attributeName="doc:name" />
			</munit-tools:with-attributes>
			</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock when Publish to Error MQ" doc:id="fbcbeba3-1692-4772-858c-9dd50d4765d3" processor="jms:publish">
			<munit-tools:with-attributes>
				<munit-tools:with-attribute whereValue="Publish To Error MQ" attributeName="doc:name" />
			</munit-tools:with-attributes>
		</munit-tools:mock-when>
	</munit:before-test>
	<flow name="error-handling-unit-test:wrapper:flow" doc:id="67ed0268-3904-4636-9568-f5ba8b54f594" >
		<flow-ref doc:name="board-experience-api-main" doc:id="7612023d-65e0-457d-a55a-2654a3169b81" name="board-experience-api-main"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="78c37b1a-b04b-4ddb-b050-06e60a3b3995" >
				<logger level="DEBUG" doc:name="Log Exception handled continue to Assert" doc:id="b9148205-f6d7-4ed0-84b5-0d3d0b92a3d6" message="Exception Handled"/>
			</on-error-continue>
		</error-handler>
	</flow>
	
	<munit:test name="error-handling-unit-test:bad-request:test" description="MUnit Test" doc:id="3c9addb7-c829-4f6f-abd1-66a4454475bc" tags="unit">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock API Kit Return APIKIT:BAD_REQUEST" doc:id="7666c36b-e713-4a7d-86a6-8c370bab46a5" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="board-experience-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Basic Security Filter" doc:id="b160c5a0-fe86-4f8f-95bd-986e97a9de1a" processor="http:basic-security-filter">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="357d017a-eeab-4d42-96e3-3fe83fa60824" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock Authorisation Filter" doc:id="ffe169b6-27f0-4f4a-b019-b5c8ae4d1a68" processor="spring:authorization-filter">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="94704937-16e1-47a9-a283-ee59d6984a28" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="error-handling-unit-test:wrapper:flow" doc:id="0be567de-c96a-420f-81f2-5b7e6cb05a01" name="error-handling-unit-test:wrapper:flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that HTTP Status is 400" doc:id="44d3ff27-8604-4b4c-8a4a-df9a67bd15e2" expression="#[vars.httpStatus]" is='#[MunitTools::equalTo(400)]' message="The HTTP Status is not Correct"/>
			<munit-tools:verify-call doc:name="Verify call to Log Bad Request Error" doc:id="9ba22269-abfc-4c08-8726-83dbbbadc2ad" processor="mule:logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Log Bad Request Error" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	
	<munit:test name="error-handling-unit-test:not-found:test" description="MUnit Test" doc:id="fce1dd96-d57c-4396-82b0-ba467dccb8cf" tags="unit">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock API Kit Return APIKIT:NOT_FOUND" doc:id="9da9beb8-4095-46be-82cd-674dfa72681d" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="board-experience-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="error-handling-unit-test:wrapper:flow" doc:id="4f7f1227-8560-4a8c-85f2-8801eeb14bc9" name="error-handling-unit-test:wrapper:flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that HTTP Status is 404" doc:id="7e5f9bec-b147-4226-b527-f82b30dc73a5" expression="#[vars.httpStatus]" is='#[MunitTools::equalTo(404)]' message="The HTTP Status is not Correct"/>
			<munit-tools:verify-call doc:name="Verify call to Log Not Found Error" doc:id="f28678b7-663a-4e09-9f8d-ed8651259280" processor="mule:logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Log Not Found Error" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	
	<munit:test name="error-handling-unit-test:method-not-allowed:test" description="MUnit Test" doc:id="7f0dac2c-eca9-48dc-80ef-6c96b68f99bc" tags="unit">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock API Kit Return APIKIT:METHOD_NOT_ALLOWED" doc:id="02de3004-dc8d-4586-a1aa-62b08147f0a3" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="board-experience-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="error-handling-unit-test:wrapper:flow" doc:id="1f10a725-02c6-4658-b6d7-b38f3414c775" name="error-handling-unit-test:wrapper:flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that HTTP Status is 405" doc:id="9bb3a79a-9d55-4bde-81cb-57132cd2569c" expression="#[vars.httpStatus]" is='#[MunitTools::equalTo(405)]' message="The HTTP Status is not Correct"/>
			<munit-tools:verify-call doc:name="Verify call to Log Method Not Allowed Error" doc:id="2a719f69-91a2-477d-87d9-c2eaf8220267" processor="mule:logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Log Method Not Allowed Error" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	
	<munit:test name="error-handling-unit-test:not-acceptable:test" description="MUnit Test" doc:id="0ed33074-0f40-42dc-b85b-c3030b9172c8" tags="unit">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock API Kit Return APIKIT:NOT_ACCEPTABLE" doc:id="27d082df-1f19-4614-8ecf-e82e5b140333" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="board-experience-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="error-handling-unit-test:wrapper:flow" doc:id="adc01ae8-fbd3-4624-be0c-3bc2f35e22b3" name="error-handling-unit-test:wrapper:flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that HTTP Status is 406" doc:id="b6c1f096-4601-487f-a6f7-588e3b3e3865" expression="#[vars.httpStatus]" is='#[MunitTools::equalTo(406)]' message="The HTTP Status is not Correct"/>
			<munit-tools:verify-call doc:name="Verify call to Log Not Acceptable Error" doc:id="76626c74-97e7-4a5b-8653-b6124db08a83" processor="mule:logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Log Not Acceptable Error" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	
	<munit:test name="error-handling-unit-test:unsupported-media-type:test" description="MUnit Test" doc:id="907a67e2-8135-4d11-9ff8-db0a0de7ff2f" tags="unit">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock API Kit Return APIKIT:UNSUPPORTED_MEDIA_TYPE" doc:id="5d9fabb3-cf8b-4665-9f9f-0d2409584d0b" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="board-experience-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="error-handling-unit-test:wrapper:flow" doc:id="27c417ce-b727-43f7-bcae-93aecb572a9e" name="error-handling-unit-test:wrapper:flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that HTTP Status is 415" doc:id="327b06ad-06cc-48cd-848e-e9153aa6a476" expression="#[vars.httpStatus]" is='#[MunitTools::equalTo(415)]' message="The HTTP Status is not Correct"/>
			<munit-tools:verify-call doc:name="Verify call to Log Unsupported Media Type Error" doc:id="89dadee9-6407-4ac0-8f3f-e442dc094503" processor="mule:logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Log Unsupported Media Type Error" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	
	<munit:test name="error-handling-unit-test:not-implemented:test" description="MUnit Test" doc:id="72613671-19a0-4c41-9b50-776b3802ba5f" tags="unit">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock API Kit Return APIKIT:NOT_IMPLEMENTED" doc:id="b7267a8d-ccc5-4c69-b58d-543b05a28e77" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="board-experience-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="error-handling-unit-test:wrapper:flow" doc:id="476ff05f-cbd8-47ab-878a-6d4ee352ea8c" name="error-handling-unit-test:wrapper:flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that HTTP Status is 501" doc:id="b012f687-cf7d-4825-ab2a-63c2d0d94b6e" expression="#[vars.httpStatus]" is='#[MunitTools::equalTo(501)]' message="The HTTP Status is not Correct"/>
			<munit-tools:verify-call doc:name="Verify call to Log Not Implemented Error" doc:id="f0c611f6-56b2-4f19-823c-1aa88643675e" processor="mule:logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Log Not Implemented Error" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="error-handling-unit-test:any:test" description="MUnit Test" doc:id="fe9b9f4e-dec0-460f-9ace-bf7e842db162" tags="unit">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock API Kit Return ANY" doc:id="708f83dd-e5c3-4ebe-81b6-e1ea71260898" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="board-experience-api-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="error-handling-unit-test:wrapper:flow" doc:id="6b7b0845-9354-42bf-8da9-56886329fa5e" name="error-handling-unit-test:wrapper:flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that HTTP Status is 500" doc:id="fb3287b6-1a7c-4468-b37c-836727573ff4" expression="#[vars.httpStatus]" is='#[MunitTools::equalTo(500)]' message="The HTTP Status is not Correct"/>
			<munit-tools:verify-call doc:name="Verify call to Log Unhandled Error" doc:id="67cfa972-4401-45b4-9631-27a53e2067de" processor="mule:logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="Log Unhandled Error" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>

	<munit:test name="error-handling-unit-test:http-connectivity-error:test" doc:id="5e712ae5-1d71-44fa-ab04-b75f202d5ac3" description="MUnit Test" tags="unit">
			<munit:behavior>
				<munit-tools:mock-when doc:name="Mock Process API to Return HTTP Connectivity Error" doc:id="c0fe79e4-5fa4-4dfc-a125-831364c3f041" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get Financial Process Data" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:CONNECTIVITY" />
				</munit-tools:then-return>
				</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="get:\reports\trial-balance:board-experience-api-config" doc:id="be6cfa8f-ed8e-4ddf-9e77-efa177896412" name="get:\reports\trial-balance:board-experience-api-config" />
			</munit:execution>
			<munit:validation>
				<munit-tools:assert-that doc:name="Assert that HTTP Status is 500" doc:id="cfa2a166-2c71-4fa2-b2c5-46a687fe7dc9" message="The HTTP Status is not Correct" expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(500)]" />
				<munit-tools:verify-call doc:name="Verify call Log HTTP Connectivity Error Message" doc:id="2e3e4b54-a793-473b-829d-973aab59c340" processor="logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Log HTTP Connectivity Error Message" attributeName="doc:name" />
				</munit-tools:with-attributes>
				</munit-tools:verify-call>
			</munit:validation>
		</munit:test>
	<munit:test name="error-handling-unit-test:expression-error:test" doc:id="447d9362-d379-4182-84a5-d327a35bdef1" description="MUnit Test" tags="unit">
			<munit:behavior>
				<munit-tools:mock-when doc:name="Mock Process API to Return Expression Error" doc:id="5ac1b2e0-e591-45a2-9c1a-56d7be8e55d7" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get Financial Process Data" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="EXPRESSION" />
				</munit-tools:then-return>
				</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="get:\reports\trial-balance:board-experience-api-config" doc:id="724504e5-e0c3-4191-bf9d-600ac556cdce" name="get:\reports\trial-balance:board-experience-api-config" />
			</munit:execution>
			<munit:validation>
				<munit-tools:assert-that doc:name="Assert that HTTP Status is 500" doc:id="98900977-0e4b-45de-bcf7-f236c742933d" message="The HTTP Status is not Correct" expression="#[vars.httpStatus]" is="#[MunitTools::equalTo(500)]" />
				<munit-tools:verify-call doc:name="Verify call Log Expression Error Message" doc:id="f442e4fb-653c-45b5-83b9-6154ae354512" processor="logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Log Expression Error Message" attributeName="doc:name" />
				</munit-tools:with-attributes>
				</munit-tools:verify-call>
			</munit:validation>
		</munit:test>


</mule>
